---
title: "Chemical Determinants of Wine Quality: A Data-Driven Analysis Using the UCI Wine Dataset"
knitr::opts_chunk$set(echo = TRUE)
options(repos = c(CRAN = "https://cloud.r-project.org"))
if (!require("tidyverse")) install.packages("tidyverse")
if (!require("kableExtra")) install.packages("kableExtra")
if (!require("here")) install.packages("here")
library(tidyverse)
library(dplyr)
library(knitr)
library(tibble)
library(kableExtra)
library(here)
# Function to compute summary statistics based on variable type
get_summary_stats <- function(data) {
# Identify numeric columns and apply summary stats
numeric_summary <- data %>%
select(where(is.numeric)) %>%
summary()  # Basic summary (mean, median, min, max, etc.)
# Convert to tibble for better formatting
numeric_summary_table <- as_tibble(as.data.frame(numeric_summary))
# Identify categorical columns (factor or character) and compute frequency table
categorical_summary <- data %>%
select(where(~ is.factor(.) | is.character(.))) %>%
summarise(across(everything(), ~ list(table(.))))  # Frequency table for each categorical variable
# Convert categorical summary to a readable table format
categorical_summary_table <- as_tibble(categorical_summary)
return(list(numeric_summary = numeric_summary_table, categorical_summary = categorical_summary_table))
}
# Get summary statistics for red wine data
red_wine_summary <- get_summary_stats(red_wine)
# Get summary statistics for white wine data
white_wine_summary <- get_summary_stats(white_wine)
# Display numeric summary for red wine
cat("### Red Wine Data Summary (Numeric)\n")
kable(red_wine_summary$numeric_summary, caption = "Summary Statistics for Numeric Variables in Red Wine")
# Display categorical summary for red wine
cat("\n### Red Wine Data Summary (Categorical)\n")
kable(red_wine_summary$categorical_summary, caption = "Summary Statistics for Categorical Variables in Red Wine")
# Display numeric summary for white wine
cat("\n### White Wine Data Summary (Numeric)\n")
kable(white_wine_summary$numeric_summary, caption = "Summary Statistics for Numeric Variables in White Wine")
# Display categorical summary for white wine
cat("\n### White Wine Data Summary (Categorical)\n")
kable(white_wine_summary$categorical_summary, caption = "Summary Statistics for Categorical Variables in White Wine")
url <- "https://raw.githubusercontent.com/Tsiiii24/ExploratoryDataAnalysis/main/winequality-red.csv"
red_wine_data <- read.csv(url, sep = ";")
# Download and read the white wine CSV file from GitHub
url_white <- "https://raw.githubusercontent.com/Tsiiii24/ExploratoryDataAnalysis/main/winequality-white.csv"
white_wine_data <- read.csv(url_white, sep = ";")
red_wine <- red_wine_data
white_wine <- white_wine_data
View(get_summary_stats)
get_summary_stats <- function(data) {
# Identify numeric columns and apply summary stats
numeric_summary <- data %>%
select(where(is.numeric)) %>%
summary()  # Basic summary (mean, median, min, max, etc.)
# Convert to tibble for better formatting
numeric_summary_table <- as_tibble(as.data.frame(numeric_summary))
# Identify categorical columns (factor or character) and compute frequency table
categorical_summary <- data %>%
select(where(~ is.factor(.) | is.character(.))) %>%
summarise(across(everything(), ~ list(table(.))))  # Frequency table for each categorical variable
# Convert categorical summary to a readable table format
categorical_summary_table <- as_tibble(categorical_summary)
return(list(numeric_summary = numeric_summary_table, categorical_summary = categorical_summary_table))
}
# Function to compute summary statistics for both numeric and categorical variables
get_summary_stats <- function(data) {
# Create a data frame to store results
summary_table <- tibble(Variable = character(),
Summary = character())
# Loop through each column and compute summary statistics
for (colname in names(data)) {
column <- data[[colname]]
if (is.numeric(column)) {
# For numeric columns, use summary statistics (mean, min, max, etc.)
summary_stats <- summary(column)
summary_text <- paste("Min:", summary_stats[1],
"| 1st Qu.:", summary_stats[2],
"| Median:", summary_stats[3],
"| Mean:", round(summary_stats[4], 2),
"| 3rd Qu.:", summary_stats[5],
"| Max:", summary_stats[6], sep = " ")
} else if (is.factor(column) | is.character(column)) {
# For categorical columns, display frequency table
freq_table <- table(column)
summary_text <- paste(names(freq_table), freq_table, sep = ": ", collapse = ", ")
}
# Add the summary to the result table
summary_table <- summary_table %>%
add_row(Variable = colname, Summary = summary_text)
}
return(summary_table)
}
# Get summary statistics for red wine data
red_wine_summary <- get_summary_stats(red_wine)
# Get summary statistics for white wine data
white_wine_summary <- get_summary_stats(white_wine)
# Combine both summaries into one table
combined_summary <- bind_rows(
mutate(red_wine_summary, Wine_Type = "Red Wine"),
mutate(white_wine_summary, Wine_Type = "White Wine")
)
# Display the combined summary table
cat("### Combined Wine Data Summary\n")
kable(combined_summary, caption = "Summary Statistics for Red and White Wine Data")
## Red Wine Evaluation
# Red wine evaluation
# Number of samples (rows)
num_samples_Red = nrow(redWineData)
# Number of features (columns)
num_features_Red = ncol(redWineData)
# Feature names
feature_names_Red = colnames(redWineData)
# Data types
feature_types_Red = sapply(redWineData, class)
# Summary
cat("Number of samples:", num_samples_Red, "\n")
cat("Number of features:", num_features_Red, "\n\n")
cat("Feature names and types:\n")
print(data.frame(Feature_Red = feature_names_Red, Type = feature_types_Red))
# Create a new data frame with measurement levels
measurement_levels_Red <- c(
"fixed.acidity" = "Ratio",
"volatile.acidity" = "Ratio",
"citric.acid" = "Ratio",
"residual.sugar" = "Ratio",
"chlorides" = "Ratio",
"free.sulfur.dioxide" = "Ratio",
"total.sulfur.dioxide" = "Ratio",
"density" = "Ratio",
"pH" = "Interval",
"sulphates" = "Ratio",
"alcohol" = "Ratio",
"quality" = "Ordinal"  # since it's a score (0â€“10 scale)
)
# Combine with feature info
info_df_Red = data.frame(
Feature_Red = names(measurement_levels_Red),
Type_Red = sapply(redWineData, class),
Measurement_Red = measurement_levels_Red
)
# Preview the feature information
print(info_df_Red)
## Preview Analytics (cleaning up data, glimpse, combining the data)
# Cleaning up the data
# Check for missing values
cat("Missing values in red wine data:\n")
print(colSums(is.na(redWineData)))
cat("\nMissing values in white wine data:\n")
print(colSums(is.na(whiteWineData)))
# Glimpse the data
cat("\nPreview of red wine data:\n")
glimpse(redWineData)
cat("\nPreview of white wine data:\n")
glimpse(whiteWineData)
# Check for duplicates
cat("Red wine duplicates:", sum(duplicated(redWineData)), "\n")
cat("White wine duplicates:", sum(duplicated(whiteWineData)), "\n")
# Remove duplicates
redWineData = redWineData[!duplicated(redWineData), ]  # Keeps only unique rows
whiteWineData = whiteWineData[!duplicated(whiteWineData), ]  # Keeps only unique rows
# Add 'type' column to distinguish between red and white wine
redWineData$type = "red"
whiteWineData$type = "white"
# Combine the red and white wine datasets into one
winesData = rbind(redWineData, whiteWineData)
# Glimpse the combined data
cat("\nCombined Wine Data:\n")
glimpse(winesData)
# Optionally, print a summary of the combined data
cat("\nSummary of combined data:\n")
summary(winesData)
